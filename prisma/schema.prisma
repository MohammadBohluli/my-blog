generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum Role {
  ADMIN
  USER
}

enum Status {
  DRAFT
  PUBLISHED
}

model User {
  id                  Int                  @id() @default(autoincrement())
  email               String               @unique
  username            String               @unique
  name                String?
  isActive            Boolean              @default(false)
  isVerifiedEmail     Boolean              @default(false)
  refreshToken        String?
  password            String
  role                Role                 @default(USER)
  createdAt           DateTime             @default(now())
  updatedAt           DateTime             @updatedAt
  articles            Article[]
  accountVerification AccountVerification?
  resetPassword       ResetPassword?

  @@map("users")
}

model Article {
  id        Int      @id() @default(autoincrement())
  title     String
  body      String
  status    Status   @default(DRAFT)
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  author    User     @relation(fields: [authorId], references: [id], onDelete: Cascade)
  authorId  Int

  @@map("articles")
}

model AccountVerification {
  id               Int       @id() @default(autoincrement())
  verificationCode String?
  expiresAt        DateTime?
  user             User      @relation(fields: [userId], references: [id])
  userId           Int       @unique

  @@map("account_verification")
}

model ResetPassword {
  id         Int       @id() @default(autoincrement())
  resetToken String?
  expiresAt  DateTime?
  user       User      @relation(fields: [userId], references: [id])
  userId     Int       @unique

  @@map("reset_password")
}
